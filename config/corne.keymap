/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_1 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        combo_2 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <15 16>;
        };

        combo_3 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
        };

        combo_4 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        combo_5 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        combo_6 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 31>;
        };

        combo_7 {
            bindings = <&kp COLON>;
            key-positions = <19 21>;
        };

        combo_9 {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 22>;
        };

        combo_10 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <21 20>;
        };

        combo_11 {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 9>;
        };

        combo_12 {
            bindings = <&kp SLASH>;
            key-positions = <7 18>;
        };

        combo_13 {
            bindings = <&kp SLASH>;
            key-positions = <19 8>;
        };

        combo_14 {
            bindings = <&kp SLASH>;
            key-positions = <32 19>;
        };

        combo_15 {
            bindings = <&kp GREATER_THAN>;
            key-positions = <18 19>;
        };

        combo_16 {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        combo_17 {
            bindings = <&kp LESS_THAN>;
            key-positions = <17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E                &kp R             &kp T          &kp Y                  &kp U            &kp I                     &kp O    &kp RA(O)  &kp DEL
&kp MINUS         &kp A  &kp S  &kp D                &kp F             &kp G          &kp H                  &kp J            &kp K                     &kp L    &kp P      &kp RA(A)
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C                &kp V             &kp B          &kp N                  &kp M            &kp COMMA                 &kp DOT  &kp RA(A)  &kp RIGHT_SHIFT
                                &mt LEFT_ALT ESCAPE  &mt LEFT_GUI TAB  &lt 1 SPACE    &mt RIGHT_SHIFT ENTER  &lt 2 BACKSPACE  &mt RIGHT_CONTROL DELETE
            >;

            label = "base";
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none             &kp DOUBLE_QUOTES  &kp RA(E)   &kp EXCLAMATION   &kp EQUAL            &kp PAGE_UP    &kp HOME         &kp UP         &kp END        &kp C_PLAY_PAUSE  &kp C_VOL_UP
&trans  &kp SINGLE_QUOTE  &kp GRAVE          &kp DOLLAR  &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp PAGE_DOWN  &kp LEFT         &kp DOWN       &kp RIGHT      &kp RIGHT_GUI     &kp C_VOL_DN
&trans  &none             &none              &kp HASH    &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp RC(F2)     &kp RC(LEFT)     &kp RC(UP)     &kp RC(RIGHT)  &kp RC(DOWN)      &kp K_MUTE
                                             &trans      &none             &kp SPACE            &trans         &lt 3 BACKSPACE  &kp RIGHT_GUI
            >;

            label = "nav";
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT     &kp AMPERSAND  &kp SLASH    &kp ASTRK    &kp EQUAL       &kp N7  &kp N8  &kp N9  &kp N0  &kp BACKSPACE
&trans  &none     &kp CARET  &kp QUESTION   &kp DOT      &kp PLUS     &kp COLON       &kp N4  &kp N5  &kp N6  &kp N0  &trans
&trans  &none     &none      &kp PIPE       &kp PERCENT  &kp PLUS     &kp LS(DOLLAR)  &kp N1  &kp N2  &kp N3  &kp N0  &trans
                             &kp LGUI       &lt 3 MINUS  &kp UNDER    &trans          &trans  &trans
            >;

            label = "num";
        };

        functions {
            bindings = <
&soft_off   &none  &none  &none   &none       &bt BT_SEL 0    &kp F10  &kp F7  &kp F8  &kp F9  &trans  &trans
&sys_reset  &none  &none  &none   &none       &bt BT_SEL 1    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&none       &none  &none  &none   &bt BT_CLR  &bt BT_SEL 2    &kp F12  &kp F1  &kp F2  &kp F3  &trans  &trans
                          &trans  &trans      &trans          &trans   &trans  &trans
            >;

            label = "func";
        };
    };
};
